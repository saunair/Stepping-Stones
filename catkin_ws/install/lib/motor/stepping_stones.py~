#!/usr/bin/env python
# license removed for brevity
import rospy
import time
from std_msgs.msg import UInt16
import numpy

z_x= 3.45787, z_y=0.0881804 , z_z=0.211088

def zero_point_server():
    global listener_trans, z_x, z_y, z_z
    rospy.init_node('zero_point_server')
    
    try:
        (trans1,rot1) = listener_trans.lookupTransform('openni_depth_frame', '/left_hip_1', rospy.Time(0))
    except (tf.LookupException, tf.ConnectivityException, tf.ExtrapolationException):
        continue
    
    try:
        (trans2,rot2) = listener_trans.lookupTransform('openni_depth_frame', '/right_hip_1', rospy.Time(0))
    except (tf.LookupException, tf.ConnectivityException, tf.ExtrapolationException):
        continue
    
    z_x = ((trans2.x + trans1.x)/2)
    z_y = ((trans2.y + trans1.y)/2)
    z_z = ((trans2.z + trans1.z)/2)
    count+=1
    

def ask_zero_point():
    rospy.wait_for_service('zero_point')
    try:
        add_two_ints = rospy.ServiceProxy('zero_point', zero_point)
        resp1 = zero_point(1)
        return resp1.zero_x, resp1.zero_y, resp1.zero_z
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e

def talker():
    pub = rospy.Publisher('servo', UInt16, queue_size=100)
    rospy.init_node('motor_control', anonymous=True)
    i = 0
    rate = rospy.Rate(30) # 30hz
    pub.publish(50)
    hello_str = "%d" % 50
    rospy.loginfo(hello_str)
    
    #delay
    time.sleep(5)
    while not rospy.is_shutdown():
        i = i + 1
	if i<50:
	    	val = 30
		#pub.publish(50)
		rate.sleep()
		pub.publish(val)
        	rate.sleep()
	
	else:
		val = 65
		#pub.publish(50)
		rate.sleep()
		pub.publish(val)
        	rate.sleep()
	
	hello_str = "%d" % val
        rospy.loginfo(hello_str)

if __name__ == '__main__':
    try:
        z_x, z_y, z_z = ask_zero_point()
    except rospy.ROSInterruptException:
        rospy.loginfo("Sorry didn't acquire the zero position")
        pass
    try:
        talker()
    except rospy.ROSInterruptException:
        pass

