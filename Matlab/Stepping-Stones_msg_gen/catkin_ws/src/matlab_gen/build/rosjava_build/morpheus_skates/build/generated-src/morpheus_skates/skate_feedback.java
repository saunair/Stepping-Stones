package morpheus_skates;

public interface skate_feedback extends org.ros.internal.message.Message {
  static final java.lang.String _TYPE = "morpheus_skates/skate_feedback";
  static final java.lang.String _DEFINITION = "Header header\r\nint16 force_front_outer\r\nint16 force_front_inner\r\nint16 force_rear\r\nint16 imu_quat_x\r\nint16 imu_quat_y\r\nint16 imu_quat_z\r\nint16 imu_quat_w\r\nfloat32 imu_accel_x\r\nfloat32 imu_accel_y\r\nfloat32 imu_accel_z\r\nfloat32 imu_rate_x\r\nfloat32 imu_rate_y \r\nfloat32 imu_rate_z\r\nfloat32 velocity_cmd_rear\r\nfloat32 velocity_cmd_front\r\nuint8 skate_fault\r\nfloat32 position_filt_rear\r\nfloat32 position_filt_front\r\nfloat32 velocity_filt_rear\r\nfloat32 velocity_filt_front\r\nbool dead_man_enable\r\nfloat32 controller_target_rear\r\nfloat32 controller_target_front\r\nbyte skate_mode\r\nint16 debug_int1\r\nint16 debug_int2\r\nint16 debug_int3\r\nint16 debug_int4\r\nfloat32 debug_float1\r\nfloat32 debug_float2\r\n";
  std_msgs.Header getHeader();
  void setHeader(std_msgs.Header value);
  short getForceFrontOuter();
  void setForceFrontOuter(short value);
  short getForceFrontInner();
  void setForceFrontInner(short value);
  short getForceRear();
  void setForceRear(short value);
  short getImuQuatX();
  void setImuQuatX(short value);
  short getImuQuatY();
  void setImuQuatY(short value);
  short getImuQuatZ();
  void setImuQuatZ(short value);
  short getImuQuatW();
  void setImuQuatW(short value);
  float getImuAccelX();
  void setImuAccelX(float value);
  float getImuAccelY();
  void setImuAccelY(float value);
  float getImuAccelZ();
  void setImuAccelZ(float value);
  float getImuRateX();
  void setImuRateX(float value);
  float getImuRateY();
  void setImuRateY(float value);
  float getImuRateZ();
  void setImuRateZ(float value);
  float getVelocityCmdRear();
  void setVelocityCmdRear(float value);
  float getVelocityCmdFront();
  void setVelocityCmdFront(float value);
  byte getSkateFault();
  void setSkateFault(byte value);
  float getPositionFiltRear();
  void setPositionFiltRear(float value);
  float getPositionFiltFront();
  void setPositionFiltFront(float value);
  float getVelocityFiltRear();
  void setVelocityFiltRear(float value);
  float getVelocityFiltFront();
  void setVelocityFiltFront(float value);
  boolean getDeadManEnable();
  void setDeadManEnable(boolean value);
  float getControllerTargetRear();
  void setControllerTargetRear(float value);
  float getControllerTargetFront();
  void setControllerTargetFront(float value);
  byte getSkateMode();
  void setSkateMode(byte value);
  short getDebugInt1();
  void setDebugInt1(short value);
  short getDebugInt2();
  void setDebugInt2(short value);
  short getDebugInt3();
  void setDebugInt3(short value);
  short getDebugInt4();
  void setDebugInt4(short value);
  float getDebugFloat1();
  void setDebugFloat1(float value);
  float getDebugFloat2();
  void setDebugFloat2(float value);
}
