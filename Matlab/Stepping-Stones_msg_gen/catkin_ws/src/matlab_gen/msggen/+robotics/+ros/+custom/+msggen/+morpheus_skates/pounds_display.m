classdef pounds_display < robotics.ros.Message
    %pounds_display MATLAB implementation of morpheus_skates/pounds_display
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2017 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'morpheus_skates/pounds_display' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '0b0dc79b21c682dc91490e0c57eacf86' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Constant, Access = protected)
        StdMsgsHeaderClass = robotics.ros.msg.internal.MessageFactory.getClassForType('std_msgs/Header') % Dispatch to MATLAB class for message type std_msgs/Header
    end
    
    properties (Dependent)
        Header
        LeftForceFrontOuter
        LeftForceFrontInner
        LeftForceRear
        RightForceFrontOuter
        RightForceFrontInner
        RightForceRear
        RightTotal
        LeftTotal
        Total
    end
    
    properties (Access = protected)
        Cache = struct('Header', []) % The cache for fast data access
    end
    
    properties (Constant, Hidden)
        PropertyList = {'Header', 'LeftForceFrontInner', 'LeftForceFrontOuter', 'LeftForceRear', 'LeftTotal', 'RightForceFrontInner', 'RightForceFrontOuter', 'RightForceRear', 'RightTotal', 'Total'} % List of non-constant message properties
        ROSPropertyList = {'header', 'left_force_front_inner', 'left_force_front_outer', 'left_force_rear', 'left_total', 'right_force_front_inner', 'right_force_front_outer', 'right_force_rear', 'right_total', 'total'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = pounds_display(msg)
            %pounds_display Construct the message object pounds_display
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function header = get.Header(obj)
            %get.Header Get the value for property Header
            if isempty(obj.Cache.Header)
                obj.Cache.Header = feval(obj.StdMsgsHeaderClass, obj.JavaMessage.getHeader);
            end
            header = obj.Cache.Header;
        end
        
        function set.Header(obj, header)
            %set.Header Set the value for property Header
            validateattributes(header, {obj.StdMsgsHeaderClass}, {'nonempty', 'scalar'}, 'pounds_display', 'Header');
            
            obj.JavaMessage.setHeader(header.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.Header)
                obj.Cache.Header.setJavaObject(header.getJavaObject);
            end
        end
        
        function leftforcefrontouter = get.LeftForceFrontOuter(obj)
            %get.LeftForceFrontOuter Get the value for property LeftForceFrontOuter
            leftforcefrontouter = single(obj.JavaMessage.getLeftForceFrontOuter);
        end
        
        function set.LeftForceFrontOuter(obj, leftforcefrontouter)
            %set.LeftForceFrontOuter Set the value for property LeftForceFrontOuter
            validateattributes(leftforcefrontouter, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'LeftForceFrontOuter');
            
            obj.JavaMessage.setLeftForceFrontOuter(leftforcefrontouter);
        end
        
        function leftforcefrontinner = get.LeftForceFrontInner(obj)
            %get.LeftForceFrontInner Get the value for property LeftForceFrontInner
            leftforcefrontinner = single(obj.JavaMessage.getLeftForceFrontInner);
        end
        
        function set.LeftForceFrontInner(obj, leftforcefrontinner)
            %set.LeftForceFrontInner Set the value for property LeftForceFrontInner
            validateattributes(leftforcefrontinner, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'LeftForceFrontInner');
            
            obj.JavaMessage.setLeftForceFrontInner(leftforcefrontinner);
        end
        
        function leftforcerear = get.LeftForceRear(obj)
            %get.LeftForceRear Get the value for property LeftForceRear
            leftforcerear = single(obj.JavaMessage.getLeftForceRear);
        end
        
        function set.LeftForceRear(obj, leftforcerear)
            %set.LeftForceRear Set the value for property LeftForceRear
            validateattributes(leftforcerear, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'LeftForceRear');
            
            obj.JavaMessage.setLeftForceRear(leftforcerear);
        end
        
        function rightforcefrontouter = get.RightForceFrontOuter(obj)
            %get.RightForceFrontOuter Get the value for property RightForceFrontOuter
            rightforcefrontouter = single(obj.JavaMessage.getRightForceFrontOuter);
        end
        
        function set.RightForceFrontOuter(obj, rightforcefrontouter)
            %set.RightForceFrontOuter Set the value for property RightForceFrontOuter
            validateattributes(rightforcefrontouter, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'RightForceFrontOuter');
            
            obj.JavaMessage.setRightForceFrontOuter(rightforcefrontouter);
        end
        
        function rightforcefrontinner = get.RightForceFrontInner(obj)
            %get.RightForceFrontInner Get the value for property RightForceFrontInner
            rightforcefrontinner = single(obj.JavaMessage.getRightForceFrontInner);
        end
        
        function set.RightForceFrontInner(obj, rightforcefrontinner)
            %set.RightForceFrontInner Set the value for property RightForceFrontInner
            validateattributes(rightforcefrontinner, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'RightForceFrontInner');
            
            obj.JavaMessage.setRightForceFrontInner(rightforcefrontinner);
        end
        
        function rightforcerear = get.RightForceRear(obj)
            %get.RightForceRear Get the value for property RightForceRear
            rightforcerear = single(obj.JavaMessage.getRightForceRear);
        end
        
        function set.RightForceRear(obj, rightforcerear)
            %set.RightForceRear Set the value for property RightForceRear
            validateattributes(rightforcerear, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'RightForceRear');
            
            obj.JavaMessage.setRightForceRear(rightforcerear);
        end
        
        function righttotal = get.RightTotal(obj)
            %get.RightTotal Get the value for property RightTotal
            righttotal = single(obj.JavaMessage.getRightTotal);
        end
        
        function set.RightTotal(obj, righttotal)
            %set.RightTotal Set the value for property RightTotal
            validateattributes(righttotal, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'RightTotal');
            
            obj.JavaMessage.setRightTotal(righttotal);
        end
        
        function lefttotal = get.LeftTotal(obj)
            %get.LeftTotal Get the value for property LeftTotal
            lefttotal = single(obj.JavaMessage.getLeftTotal);
        end
        
        function set.LeftTotal(obj, lefttotal)
            %set.LeftTotal Set the value for property LeftTotal
            validateattributes(lefttotal, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'LeftTotal');
            
            obj.JavaMessage.setLeftTotal(lefttotal);
        end
        
        function total = get.Total(obj)
            %get.Total Get the value for property Total
            total = single(obj.JavaMessage.getTotal);
        end
        
        function set.Total(obj, total)
            %set.Total Set the value for property Total
            validateattributes(total, {'numeric'}, {'nonempty', 'scalar'}, 'pounds_display', 'Total');
            
            obj.JavaMessage.setTotal(total);
        end
    end
    
    methods (Access = protected)
        function resetCache(obj)
            %resetCache Resets any cached properties
            obj.Cache.Header = [];
        end
        
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Clear any existing cached properties
            cpObj.resetCache;
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.LeftForceFrontOuter = obj.LeftForceFrontOuter;
            cpObj.LeftForceFrontInner = obj.LeftForceFrontInner;
            cpObj.LeftForceRear = obj.LeftForceRear;
            cpObj.RightForceFrontOuter = obj.RightForceFrontOuter;
            cpObj.RightForceFrontInner = obj.RightForceFrontInner;
            cpObj.RightForceRear = obj.RightForceRear;
            cpObj.RightTotal = obj.RightTotal;
            cpObj.LeftTotal = obj.LeftTotal;
            cpObj.Total = obj.Total;
            
            % Recursively copy compound properties
            cpObj.Header = copy(obj.Header);
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.LeftForceFrontOuter = strObj.LeftForceFrontOuter;
            obj.LeftForceFrontInner = strObj.LeftForceFrontInner;
            obj.LeftForceRear = strObj.LeftForceRear;
            obj.RightForceFrontOuter = strObj.RightForceFrontOuter;
            obj.RightForceFrontInner = strObj.RightForceFrontInner;
            obj.RightForceRear = strObj.RightForceRear;
            obj.RightTotal = strObj.RightTotal;
            obj.LeftTotal = strObj.LeftTotal;
            obj.Total = strObj.Total;
            obj.Header = feval([obj.StdMsgsHeaderClass '.loadobj'], strObj.Header);
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.LeftForceFrontOuter = obj.LeftForceFrontOuter;
            strObj.LeftForceFrontInner = obj.LeftForceFrontInner;
            strObj.LeftForceRear = obj.LeftForceRear;
            strObj.RightForceFrontOuter = obj.RightForceFrontOuter;
            strObj.RightForceFrontInner = obj.RightForceFrontInner;
            strObj.RightForceRear = obj.RightForceRear;
            strObj.RightTotal = obj.RightTotal;
            strObj.LeftTotal = obj.LeftTotal;
            strObj.Total = obj.Total;
            strObj.Header = saveobj(obj.Header);
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.morpheus_skates.pounds_display.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.morpheus_skates.pounds_display;
            obj.reload(strObj);
        end
    end
end
